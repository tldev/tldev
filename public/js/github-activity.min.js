/*!
 * GitHub Activity Stream - v0.1.0 - 7/28/2014
 * https://github.com/caseyscarborough/github-activity
 *
 * Copyright (c) 2014 Casey Scarborough
 * MIT License
 * http://opensource.org/licenses/MIT
 */
function millisecondsToStr(e){"use strict";function t(e){return e>1?"s ago":" ago"}var n=Math.floor(e/1e3);var r=Math.floor(n/31536e3);if(r)return r+" year"+t(r);var i=Math.floor((n%=31536e3)/2592e3);if(i)return i+" month"+t(i);var s=Math.floor((n%=2592e3)/86400);if(s)return s+" day"+t(s);var o=Math.floor((n%=86400)/3600);if(o)return"about "+o+" hour"+t(o);var u=Math.floor((n%=3600)/60);if(u)return u+" minute"+t(u);var a=n%60;if(a)return a+" second"+t(a);return"just now"}function pluralize(e,t){if(t!==1)return e+"s";return e}function md5cycle(e,t){var n=e[0],r=e[1],i=e[2],s=e[3];n=ff(n,r,i,s,t[0],7,-680876936);s=ff(s,n,r,i,t[1],12,-389564586);i=ff(i,s,n,r,t[2],17,606105819);r=ff(r,i,s,n,t[3],22,-1044525330);n=ff(n,r,i,s,t[4],7,-176418897);s=ff(s,n,r,i,t[5],12,1200080426);i=ff(i,s,n,r,t[6],17,-1473231341);r=ff(r,i,s,n,t[7],22,-45705983);n=ff(n,r,i,s,t[8],7,1770035416);s=ff(s,n,r,i,t[9],12,-1958414417);i=ff(i,s,n,r,t[10],17,-42063);r=ff(r,i,s,n,t[11],22,-1990404162);n=ff(n,r,i,s,t[12],7,1804603682);s=ff(s,n,r,i,t[13],12,-40341101);i=ff(i,s,n,r,t[14],17,-1502002290);r=ff(r,i,s,n,t[15],22,1236535329);n=gg(n,r,i,s,t[1],5,-165796510);s=gg(s,n,r,i,t[6],9,-1069501632);i=gg(i,s,n,r,t[11],14,643717713);r=gg(r,i,s,n,t[0],20,-373897302);n=gg(n,r,i,s,t[5],5,-701558691);s=gg(s,n,r,i,t[10],9,38016083);i=gg(i,s,n,r,t[15],14,-660478335);r=gg(r,i,s,n,t[4],20,-405537848);n=gg(n,r,i,s,t[9],5,568446438);s=gg(s,n,r,i,t[14],9,-1019803690);i=gg(i,s,n,r,t[3],14,-187363961);r=gg(r,i,s,n,t[8],20,1163531501);n=gg(n,r,i,s,t[13],5,-1444681467);s=gg(s,n,r,i,t[2],9,-51403784);i=gg(i,s,n,r,t[7],14,1735328473);r=gg(r,i,s,n,t[12],20,-1926607734);n=hh(n,r,i,s,t[5],4,-378558);s=hh(s,n,r,i,t[8],11,-2022574463);i=hh(i,s,n,r,t[11],16,1839030562);r=hh(r,i,s,n,t[14],23,-35309556);n=hh(n,r,i,s,t[1],4,-1530992060);s=hh(s,n,r,i,t[4],11,1272893353);i=hh(i,s,n,r,t[7],16,-155497632);r=hh(r,i,s,n,t[10],23,-1094730640);n=hh(n,r,i,s,t[13],4,681279174);s=hh(s,n,r,i,t[0],11,-358537222);i=hh(i,s,n,r,t[3],16,-722521979);r=hh(r,i,s,n,t[6],23,76029189);n=hh(n,r,i,s,t[9],4,-640364487);s=hh(s,n,r,i,t[12],11,-421815835);i=hh(i,s,n,r,t[15],16,530742520);r=hh(r,i,s,n,t[2],23,-995338651);n=ii(n,r,i,s,t[0],6,-198630844);s=ii(s,n,r,i,t[7],10,1126891415);i=ii(i,s,n,r,t[14],15,-1416354905);r=ii(r,i,s,n,t[5],21,-57434055);n=ii(n,r,i,s,t[12],6,1700485571);s=ii(s,n,r,i,t[3],10,-1894986606);i=ii(i,s,n,r,t[10],15,-1051523);r=ii(r,i,s,n,t[1],21,-2054922799);n=ii(n,r,i,s,t[8],6,1873313359);s=ii(s,n,r,i,t[15],10,-30611744);i=ii(i,s,n,r,t[6],15,-1560198380);r=ii(r,i,s,n,t[13],21,1309151649);n=ii(n,r,i,s,t[4],6,-145523070);s=ii(s,n,r,i,t[11],10,-1120210379);i=ii(i,s,n,r,t[2],15,718787259);r=ii(r,i,s,n,t[9],21,-343485551);e[0]=add32(n,e[0]);e[1]=add32(r,e[1]);e[2]=add32(i,e[2]);e[3]=add32(s,e[3])}function cmn(e,t,n,r,i,s){t=add32(add32(t,e),add32(r,s));return add32(t<<i|t>>>32-i,n)}function ff(e,t,n,r,i,s,o){return cmn(t&n|~t&r,e,t,i,s,o)}function gg(e,t,n,r,i,s,o){return cmn(t&r|n&~r,e,t,i,s,o)}function hh(e,t,n,r,i,s,o){return cmn(t^n^r,e,t,i,s,o)}function ii(e,t,n,r,i,s,o){return cmn(n^(t|~r),e,t,i,s,o)}function md51(e){txt="";var t=e.length,n=[1732584193,-271733879,-1732584194,271733878],r;for(r=64;r<=e.length;r+=64){md5cycle(n,md5blk(e.substring(r-64,r)))}e=e.substring(r-64);var i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<e.length;r++){i[r>>2]|=e.charCodeAt(r)<<(r%4<<3)}i[r>>2]|=128<<(r%4<<3);if(r>55){md5cycle(n,i);for(r=0;r<16;r++){i[r]=0}}i[14]=t*8;md5cycle(n,i);return n}function md5blk(e){var t=[],n;for(n=0;n<64;n+=4){t[n>>2]=e.charCodeAt(n)+(e.charCodeAt(n+1)<<8)+(e.charCodeAt(n+2)<<16)+(e.charCodeAt(n+3)<<24)}return t}function rhex(e){var t="",n=0;for(;n<4;n++){t+=hex_chr[e>>n*8+4&15]+hex_chr[e>>n*8&15]}return t}function hex(e){for(var t=0;t<e.length;t++){e[t]=rhex(e[t])}return e.join("")}function md5(e){return hex(md51(e))}function add32(e,t){return e+t&4294967295}var GitHubActivity=function(){"use strict";var e={};var t={renderLink:function(e,t,n){if(!t){t=e}if(typeof n==="undefined")n="";return Mustache.render('<a class="'+n+'" href="{{url}}" target="_blank">{{{title}}}</a>',{url:e,title:t})},renderGitHubLink:function(e,n,r){if(!n){n=e}if(typeof r==="undefined")r="";return t.renderLink("https://github.com/"+e,n,r)},getMessageFor:function(e){var n=e.payload;e.repoLink=t.renderGitHubLink(e.repo.name);e.userGravatar=Mustache.render('<div class="gha-gravatar-user"><img src="{{url}}" class="gha-gravatar-small"></div>',{url:e.actor.avatar_url});if(n.ref){if(n.ref.substring(0,11)==="refs/heads/"){e.branch=n.ref.substring(11)}else{e.branch=n.ref}e.branchLink=t.renderGitHubLink(e.repo.name+"/tree/"+e.branch,e.branch)+" at "}if(n.commits){var r=n.before+"..."+n.head;var i=n.commits.length;if(i===2){e.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">View comparison for these 2 commits &raquo;</a>',{repo:e.repo.name,shaDiff:r})}else if(i>2){e.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">{{length}} more '+pluralize("commit",i-2)+" &raquo;</a>",{repo:e.repo.name,shaDiff:r,length:n.size-2})}n.commits.forEach(function(r,i){if(r.message.length>66){r.message=r.message.substring(0,66)+"..."}if(i<2){r.shaLink=t.renderGitHubLink(e.repo.name+"/commit/"+r.sha,r.sha.substring(0,6),"gha-sha");r.committerGravatar=Mustache.render('<img class="gha-gravatar-commit" src="https://gravatar.com/avatar/{{hash}}?s=30&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="16" />',{hash:md5(r.author.email)})}else{n.commits.splice(2,n.size);return false}})}if(n.issue){var s=e.repo.name+"#"+n.issue.number;e.issueLink=t.renderLink(n.issue.html_url,s);e.issueType="issue";if(n.issue.pull_request){e.issueType="pull request"}}if(n.pull_request){var o=n.pull_request;e.pullRequestLink=t.renderLink(n.html_url,e.repo.name+"#"+o.number);e.mergeMessage="";if(n.pull_request.merged){n.action="merged";var u="{{c}} "+pluralize("commit",o.commits)+" with {{a}} "+pluralize("addition",o.additions)+" and {{d}} "+pluralize("deletion",o.deletions);e.mergeMessage=Mustache.render('<br><small class="gha-message-merge">'+u+"</small>",{c:o.commits,a:o.additions,d:o.deletions})}}if(n.comment&&n.comment.pull_request_url){var s=e.repo.name+"#"+n.comment.pull_request_url.split("/").pop();e.pullRequestLink=t.renderGitHubLink(n.comment.pull_request_url,s)}if(n.comment&&n.comment.body){e.comment=n.comment.body;if(e.comment.length>150){e.comment=e.comment.substring(0,150)+"..."}if(n.comment.html_url&&n.comment.commit_id){var s=e.repo.name+"@"+n.comment.commit_id.substring(0,10);e.commentLink=t.renderLink(n.comment.html_url,s)}}if(e.type==="ReleaseEvent"){e.tagLink=t.renderLink(n.release.html_url,n.release.tag_name);e.zipLink=t.renderLink(n.release.zipball_url,"Download Source Code (zip)")}if(e.type==="GollumEvent"){var a=n.pages[0];e.actionType=a.action;e.message=e.actionType.charAt(0).toUpperCase()+e.actionType.slice(1)+" ";e.message+=t.renderGitHubLink(a.html_url,a.title)}if(e.type==="FollowEvent")e.targetLink=t.renderGitHubLink(n.target.login);if(e.type==="ForkEvent")e.forkLink=t.renderGitHubLink(n.forkee.full_name);if(e.type==="MemberEvent")e.memberLink=t.renderGitHubLink(n.member.login);if(n.gist){e.actionType=n.action==="fork"?n.action+"ed":n.action+"d";e.gistLink=t.renderLink(n.gist.html_url,"gist: "+n.gist.id)}var u=Mustache.render(templates[e.type],e);var f=millisecondsToStr(new Date-new Date(e.created_at));var l;if(e.type=="CreateEvent"&&["repository","branch","tag"].indexOf(n.ref_type)>=0){l=icons[e.type+"_"+n.ref_type]}else{l=icons[e.type]}var c={message:u,icon:l,timeString:f,userLink:t.renderGitHubLink(e.actor.login)};if(singleLineActivities.indexOf(e.type)>-1){return Mustache.render(templates.SingleLineActivity,c)}return Mustache.render(templates.Activity,c)},getHeaderHTML:function(e){if(e.name){e.userNameLink=t.renderLink(e.html_url,e.name)}else{e.withoutName=" without-name"}e.userLink=t.renderLink(e.html_url,e.login);e.gravatarLink=t.renderLink(e.html_url,'<img src="'+e.avatar_url+'">');return Mustache.render(templates.UserHeader,e)},getActivityHTML:function(e,n){var r="";var i=e.length;if(n&&n>i){n=i}n=n?n:i;if(n===0){return Mustache.render(templates.NoActivity,{})}for(var s=0;s<n;s++){r+=t.getMessageFor(e[s])}return r},getOutputFromRequest:function(e,t){var n,r,i=new XMLHttpRequest;i.open("GET",e,false);i.onload=function(){if(i.status>=200&&i.status<400){r=JSON.parse(i.responseText);n=t(r)}else{return false}};i.onerror=function(){console.log("An error occurred connecting to the url.")};i.send();return n},renderStream:function(e,t){t.innerHTML=Mustache.render(templates.Stream,{text:e,footer:templates.Footer});t.style.position="relative"}};e.feed=function(e){if(!e.username||!e.selector){return false}var n=e.selector,r="https://api.github.com/users/"+e.username,i=r+"/events",s,o;if(e.clientId&&e.clientSecret){var u="?client_id="+e.clientId+"&client_secret="+e.clientSecret;r+=u;i+=u}if(typeof e.templates=="object"){for(var a in templates){if(typeof e.templates[a]=="string"){templates[a]=e.templates[a]}}}s=t.getOutputFromRequest(r,t.getHeaderHTML);if(s){var f;if(e.limit!="undefined"){f=parseInt(e.limit,10)}else{f=null}s+=t.getOutputFromRequest(i,function(e){return t.getActivityHTML(e,f)})}else{s=Mustache.render(templates.NotFound,{username:e.username})}o=n.charAt(0)==="#"?document.getElementById(n.substring(1)):document.getElementsByClassName(n.substring(1));if(o instanceof HTMLCollection){for(var l=0;l<o.length;l++){t.renderStream(s,o[l])}}else{t.renderStream(s,o)}};return e}();var hex_chr="0123456789abcdef".split("");if(md5("hello")!="5d41402abc4b2a76b9719d911017c592"){function add32(e,t){var n=(e&65535)+(t&65535),r=(e>>16)+(t>>16)+(n>>16);return r<<16|n&65535}}var templates={Stream:'<div class="gha-feed">{{{text}}}<div class="gha-push-small"></div>{{{footer}}}</div>',Activity:'<div id="{{id}}" class="gha-activity">               <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>               <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>               <div class="gha-clear"></div>             </div>',SingleLineActivity:'<div class="gha-activity gha-small">                         <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>                         <div class="gha-message">{{{userLink}}} {{{message}}}</div><div class="gha-time">{{{timeString}}}</div>                         <div class="gha-clear"></div>                       </div>',UserHeader:'<div class="gha-header">                 <div class="gha-github-icon"><span class="octicon octicon-mark-github"></span></div>                 <div class="gha-user-info{{withoutName}}">{{{userNameLink}}}<p>{{{userLink}}}</p></div>                 <div class="gha-gravatar">{{{gravatarLink}}}</div>               </div><div class="gha-push"></div>',Footer:'<div class="gha-footer">Public Activity <a href="https://github.com/caseyscarborough/github-activity" target="_blank">GitHub Activity Stream</a>',NoActivity:'<div class="gha-info">This user does not have any public activity yet.</div>',NotFound:'<div class="gha-info">User {{username}} wasn\'t found.</div>',CommitCommentEvent:"commented on commit {{{commentLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",CreateEvent:"created {{payload.ref_type}} {{{branchLink}}}{{{repoLink}}}",DeleteEvent:"deleted {{payload.ref_type}} {{payload.ref}} at {{{repoLink}}}",FollowEvent:"started following {{{targetLink}}}",ForkEvent:"forked {{{repoLink}}} to {{{forkLink}}}",GistEvent:"{{actionType}} {{{gistLink}}}",GollumEvent:"{{actionType}} the {{{repoLink}}} wiki<br>{{{userGravatar}}}<small>{{{message}}}</small>",IssueCommentEvent:"commented on {{issueType}} {{{issueLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",IssuesEvent:"{{payload.action}} issue {{{issueLink}}}<br>{{{userGravatar}}}<small>{{payload.issue.title}}</small>",MemberEvent:"added {{{memberLink}}} to {{{repoLink}}}",PublicEvent:"open sourced {{{repoLink}}}",PullRequestEvent:"{{payload.action}} pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{payload.pull_request.title}}</small>{{{mergeMessage}}}",PullRequestReviewCommentEvent:"commented on pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",PushEvent:'pushed to {{{branchLink}}}{{{repoLink}}}<br>                <ul class="gha-commits">{{#payload.commits}}<li><small>{{{committerGravatar}}} {{{shaLink}}} {{message}}</small></li>{{/payload.commits}}</ul>                <small class="gha-message-commits">{{{commitsMessage}}}</small>',ReleaseEvent:'released {{{tagLink}}} at {{{repoLink}}}<br>{{{userGravatar}}}<small><span class="octicon octicon-cloud-download"></span>  {{{zipLink}}}</small>',WatchEvent:"starred {{{repoLink}}}"},icons={CommitCommentEvent:"comment-discussion",CreateEvent_repository:"repo-create",CreateEvent_tag:"tag-add",CreateEvent_branch:"git-branch-create",DeleteEvent:"repo-delete",FollowEvent:"person-follow",ForkEvent:"repo-forked",GistEvent:"gist",GollumEvent:"repo",IssuesEvent:"issue-opened",IssueCommentEvent:"comment-discussion",MemberEvent:"person",PublicEvent:"globe",PullRequestEvent:"git-pull-request",PullRequestReviewCommentEvent:"comment-discussion",PushEvent:"git-commit",ReleaseEvent:"tag-add",WatchEvent:"star"},singleLineActivities=["CreateEvent","DeleteEvent","FollowEvent","ForkEvent","GistEvent","MemberEvent","WatchEvent"]